{"version":3,"file":"static/js/873.bb69a736.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,QAAU,yBAAyB,iBAAmB,kCAAkC,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,mBCQrLA,EAAc,SAACC,GACxB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAASC,UAC7CH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAKK,SAAEN,EAAMS,QAElC,ECPaC,EAAU,SAACV,GACpB,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAUC,SAAEN,EAAMW,SAC7C,E,UC+BaC,EAAc,SAACZ,GACxB,OACIG,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACHC,cAAe,CAACC,eAAgB,IAChCC,SAAU,SAACC,EAAwBC,GAC/BlB,EAAMmB,mBAAmBF,EAAOF,gBAChCG,EAAQE,eAAc,GACtBF,EAAQG,WACZ,EAAEf,SAED,SAACN,GAAkC,OAChCsB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAjB,SAAA,EACDH,EAAAA,EAAAA,KAAA,OAAAG,UAAKH,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CAACC,GAAI,WAAYC,KAAK,OAAOjB,KAAK,iBAAiBkB,YAAY,kBAC1ExB,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAAQpB,SAAC,eACnB,GAIvB,E,6BC5BA,GAAesB,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAdoB,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAC2B,SAACC,GACxB,MAAO,CACHb,mBAAoB,SAACJ,GACjBiB,GAASC,EAAAA,EAAAA,GAAclB,GAC3B,EAER,IAIImB,EAAAA,EAFJ,EDvBmD,SAAClC,GAEhD,IAAI8B,EAAQ9B,EAAM+B,YAEdI,EAAkBL,EAAMM,QAAQC,KAAI,SAAAC,GAAE,OAAInC,EAAAA,EAAAA,KAACJ,EAAW,CAAaG,GAAIoC,EAAGpC,GAAIO,KAAM6B,EAAG7B,MAA3B6B,EAAGpC,GAA+B,IAC9FqC,EAAmBT,EAAMU,SAASH,KAAI,SAAAC,GAAE,OAAInC,EAAAA,EAAAA,KAACO,EAAO,CAAaC,QAAS2B,EAAG3B,SAAnB2B,EAAGpC,GAA0B,IAE3F,OACIoB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAAA,QAAUC,SAAA,EACtBgB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAAA,iBAAmBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAcC,SACzB6B,KAELhC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,SAAWC,SACtBiC,QAITpC,EAAAA,EAAAA,KAACS,EAAW,CAACO,mBAAoBnB,EAAMmB,uBAInD,G","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Kho64\",\"dialogsContainer\":\"Dialogs_dialogsContainer__m77L7\",\"dialogsItem\":\"Dialogs_dialogsItem__3iLUM\",\"messages\":\"Dialogs_messages__CBq9I\",\"message\":\"Dialogs_message__Kd7Ie\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype dialogsItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogsItem = (props: dialogsItemType) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: messageType) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, Form, Formik, FormikProps} from \"formik\";\r\n\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(el => <DialogsItem key={el.id} id={el.id} name={el.name}/>)\r\n    let messagesElements = state.messages.map(el => <Message key={el.id} message={el.message}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsContainer}>\r\n                <div className={s.dialogsItem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n\r\n            <MessageForm addMessageCallback={props.addMessageCallback}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype FormPropsType = {\r\n    addMessageCallback: (newMessageText: string) => void\r\n}\r\n\r\ntype FormikDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const MessageForm = (props: FormPropsType) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: ''}}\r\n            onSubmit={(values: FormikDataType, actions) => {\r\n                props.addMessageCallback(values.newMessageText)\r\n                actions.setSubmitting(false);\r\n                actions.resetForm();\r\n            }}\r\n        >\r\n            {(props: FormikProps<FormikDataType>) => (\r\n                <Form>\r\n                    <div><Field as={'textarea'} type=\"text\" name=\"newMessageText\" placeholder=\"Enter text\"/></div>\r\n                    <button type=\"submit\">Add post</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}","import {sendMessageAC, InitialStateDialogReducerType} from \"../../redux/dialog-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch, compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialStateDialogReducerType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addMessageCallback: (newMessageText: string) => void\r\n\r\n}\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessageCallback: (newMessageText: string) => {\r\n            dispatch(sendMessageAC(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)"],"names":["DialogsItem","props","path","id","_jsx","className","s","children","NavLink","to","name","Message","message","MessageForm","Formik","initialValues","newMessageText","onSubmit","values","actions","addMessageCallback","setSubmitting","resetForm","_jsxs","Form","Field","as","type","placeholder","compose","connect","state","dialogsPage","dispatch","sendMessageAC","withAuthRedirect","dialogsElements","dialogs","map","el","messagesElements","messages"],"sourceRoot":""}