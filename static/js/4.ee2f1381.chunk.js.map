{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","to","name","Message","message","MessageForm","initialValues","newMessageText","onSubmit","values","actions","addMessageCallback","setSubmitting","resetForm","as","type","placeholder","compose","connect","state","dialogsPage","dispatch","sendMessageAC","withAuthRedirect","dialogsElements","dialogs","map","el","messagesElements","messages","dialogsContainer","dialogsItem"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,iBAAmB,kCAAkC,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,6FCQvLC,EAAc,SAACC,GACxB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCLrBC,EAAU,SAACT,GACpB,OAAO,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,SCgChCC,EAAc,SAACX,GACxB,OACI,cAAC,IAAD,CACIY,cAAe,CAACC,eAAgB,IAChCC,SAAU,SAACC,EAAwBC,GAC/BhB,EAAMiB,mBAAmBF,EAAOF,gBAChCG,EAAQE,eAAc,GACtBF,EAAQG,aALhB,SAQK,SAACnB,GAAD,OACG,eAAC,IAAD,WACI,8BAAK,cAAC,IAAD,CAAOoB,GAAI,WAAYC,KAAK,OAAOb,KAAK,iBAAiBc,YAAY,iBAC1E,wBAAQD,KAAK,SAAb,6B,yBCvBLE,sBACXC,aAdoB,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACC,GACxB,MAAO,CACHV,mBAAoB,SAACJ,GACjBc,EAASC,YAAcf,SAO/BgB,IAFWN,EDvBoC,SAACvB,GAEhD,IAAIyB,EAAQzB,EAAM0B,YAEdI,EAAkBL,EAAMM,QAAQC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAyB/B,GAAI+B,EAAG/B,GAAIM,KAAMyB,EAAGzB,MAA3ByB,EAAG/B,OAC/DgC,EAAmBT,EAAMU,SAASH,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAqBvB,QAASuB,EAAGvB,SAAnBuB,EAAG/B,OAEjE,OACI,sBAAKC,UAAWC,IAAE2B,QAAlB,UACI,sBAAK5B,UAAWC,IAAEgC,iBAAlB,UACI,qBAAKjC,UAAWC,IAAEiC,YAAlB,SACKP,IAEL,qBAAK3B,UAAWC,IAAE+B,SAAlB,SACKD,OAIT,cAAC,EAAD,CAAajB,mBAAoBjB,EAAMiB","file":"static/js/4.ee2f1381.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__R_ACZ\",\"dialogsContainer\":\"Dialogs_dialogsContainer__2r-jA\",\"dialogsItem\":\"Dialogs_dialogsItem__3kp7G\",\"messages\":\"Dialogs_messages__Nmt2I\",\"message\":\"Dialogs_message__3f32W\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype dialogsItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogsItem = (props: dialogsItemType) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: messageType) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, Form, Formik, FormikProps} from \"formik\";\r\n\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(el => <DialogsItem key={el.id} id={el.id} name={el.name}/>)\r\n    let messagesElements = state.messages.map(el => <Message key={el.id} message={el.message}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsContainer}>\r\n                <div className={s.dialogsItem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n\r\n            <MessageForm addMessageCallback={props.addMessageCallback}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype FormPropsType = {\r\n    addMessageCallback: (newMessageText: string) => void\r\n}\r\n\r\ntype FormikDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const MessageForm = (props: FormPropsType) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{newMessageText: ''}}\r\n            onSubmit={(values: FormikDataType, actions) => {\r\n                props.addMessageCallback(values.newMessageText)\r\n                actions.setSubmitting(false);\r\n                actions.resetForm();\r\n            }}\r\n        >\r\n            {(props: FormikProps<FormikDataType>) => (\r\n                <Form>\r\n                    <div><Field as={'textarea'} type=\"text\" name=\"newMessageText\" placeholder=\"Enter text\"/></div>\r\n                    <button type=\"submit\">Add post</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}","import {sendMessageAC, InitialStateDialogReducerType} from \"../../redux/dialog-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch, compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialStateDialogReducerType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addMessageCallback: (newMessageText: string) => void\r\n\r\n}\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessageCallback: (newMessageText: string) => {\r\n            dispatch(sendMessageAC(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)"],"sourceRoot":""}