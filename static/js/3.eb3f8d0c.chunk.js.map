{"version":3,"sources":["Components/common/pagination/Pagination.module.css","Components/Users/Users.module.css","Components/common/pagination/Pagination.tsx","Components/Users/User.tsx","Components/Users/Users.tsx","redux/users-selectors.ts","Components/Users/UsersContainer.tsx"],"names":["module","exports","Pagination","currentPage","totalItemsCount","pageSize","onPageChangedCallback","portionSize","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","pagination","onClick","filter","p","map","pageNumber","selectPageActive","event","User","user","followingInProgress","unFollow","follow","to","id","src","photos","small","photoAvatar","styles","userPhoto","alt","followed","disabled","some","name","status","Users","totalUsersCount","users","u","getUsers","state","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","onPageChanged","props","setCurrentPage","this","Preloader","React","Component","compose","connect","toggleFollowingInProgress","requestUsers"],"mappings":"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","file":"static/js/3.eb3f8d0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__38d0z\",\"pageNumber\":\"Pagination_pageNumber__3yilo\",\"selectPageActive\":\"Pagination_selectPageActive__x64BV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1rpAC\",\"selectPageActive\":\"Users_selectPageActive__1msBc\",\"selectPage\":\"Users_selectPage__2Jnyx\"};","import React, {useState} from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\ntype UsersType = {\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChangedCallback: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\nexport const Pagination: React.FC<UsersType> = (\r\n    {currentPage, totalItemsCount, pageSize, onPageChangedCallback,\r\n    portionSize = 25}) => {\r\n    let pages = []\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.pagination}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber - 1)}}> {'<'} </button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n            return <div className={currentPage === p\r\n                ? `${s.pageNumber} ${s.selectPageActive}`\r\n                : s.pageNumber}\r\n                         key={p}\r\n                         onClick={(event => onPageChangedCallback(p))}>{p}</div>\r\n        })}\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1)}}> {'>'} </button>}\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport photoAvatar from \"../../assets/images/photoAvatar.jpg\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UsersType = {\r\n    key: number | null\r\n    follow: (userId: number | null) => void\r\n    unFollow: (userId: number | null) => void\r\n    user: UserType\r\n    followingInProgress: Array<number | null>\r\n}\r\n\r\nexport const User: React.FC<UsersType> = (\r\n    {\r\n        user, followingInProgress,\r\n        unFollow, follow\r\n    }) => {\r\n\r\n    return (\r\n        <div>\r\n        <span>\r\n          <div>\r\n            <NavLink to={'./profile/' + user.id}> <img src={user.photos.small !== null ? user.photos.small : photoAvatar}\r\n                                                    className={styles.userPhoto} alt={'User'}/></NavLink>\r\n          </div>\r\n          <div>\r\n            {user.followed\r\n                ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                    unFollow(user.id)\r\n\r\n                }}>Unfollow</button>\r\n\r\n                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                    follow(user.id)\r\n\r\n                }}>Follow</button>}\r\n          </div>\r\n        </span>\r\n            <span>\r\n          <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n          </span>\r\n          <span>\r\n            <div>{'user.location.country'}</div>\r\n            <div>{'user.location.city'}</div>\r\n          </span>\r\n        </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {InitialStateUsersReducerType} from \"../../redux/users-reducer\";\r\nimport {Pagination} from \"../common/pagination/Pagination\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype UsersType = {\r\n    follow: (userId: number | null) => void\r\n    unFollow: (userId: number | null) => void\r\n    users: InitialStateUsersReducerType\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChangedCallback: (pageNumber: number) => void\r\n    followingInProgress: Array<number | null>\r\n}\r\n\r\n\r\nexport const Users: React.FC<UsersType> = (\r\n    {\r\n        totalUsersCount, pageSize, currentPage,\r\n        onPageChangedCallback, users, followingInProgress,\r\n        unFollow, follow\r\n    }) => {\r\n\r\n    return <div>\r\n        <Pagination currentPage={currentPage}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    onPageChangedCallback={onPageChangedCallback}/>\r\n        <div>\r\n            {\r\n                users.users.map(u => <User key={u.id}\r\n                                           follow={follow}\r\n                                           unFollow={unFollow}\r\n                                           user={u}\r\n                                           followingInProgress={followingInProgress}/>)\r\n\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage\r\n}\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUserCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n// example reselect\r\n// export const getUsersSuperSelector = createSelector(getUsers,\r\n//     (users: any) => {\r\n//     return users.filter(u => true) // example code\r\n// })\r\n","import {connect} from \"react-redux\";\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingInProgress, unFollow,} from \"../../redux/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../general/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getCurrentPage,\r\n    getIsFetching, getFollowingInProgress,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nexport class UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users follow={this.props.follow}\r\n                   unFollow={this.props.unFollow}\r\n                   users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChangedCallback={this.onPageChanged}\r\n                   followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow, unFollow, setCurrentPage,\r\n        toggleFollowingInProgress, getUsers: requestUsers\r\n    }),\r\n    /*withAuthRedirect*/\r\n)(UsersContainer)\r\n\r\n//types\r\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number | null) => void\r\n    unFollow: (userId: number | null) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number | null) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n}\r\nexport type UsersPropsType = mapStateToPropsType & mapDispatchToPropsType"],"sourceRoot":""}